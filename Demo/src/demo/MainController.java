
package demo;

public class MainController extends javax.swing.JFrame {
    private final Observerble observerble;
    
    private String selectType = null;
    private boolean clearPosition = false;
    private  final String[] List ={"All","Helicopter","Tank","Submarian"};
    
    public MainController() {
        initComponents();
       observerble = Observerble.getInstance();
       observerble.setControllroom(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jComboBoxCollectInformation = new javax.swing.JComboBox<>();
        jLabelFuelCount = new javax.swing.JLabel();
        jLabelFuelAmount = new javax.swing.JLabel();
        jLabelAmmoAmount = new javax.swing.JLabel();
        jLabel4Positions = new javax.swing.JLabel();
        jButtonCollectInformation = new javax.swing.JButton();
        jButtonSend = new javax.swing.JButton();
        jCheckBoxSendPrivate = new javax.swing.JCheckBox();
        jCheckBoxAreaClear = new javax.swing.JCheckBox();
        jSliderPosition = new javax.swing.JSlider();
        jLabelAmmoAmount1 = new javax.swing.JLabel();
        jLabelAmmoAmount2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSend = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaReceive = new javax.swing.JTextArea();
        jTextFieldSend = new javax.swing.JTextField();
        jLabelSolderCount1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Controller");
        setBackground(new java.awt.Color(26, 2, 7));
        setCursor(new java.awt.Cursor(java.awt.Cursor.N_RESIZE_CURSOR));

        jComboBoxCollectInformation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Helicopter", "Tank", "Submarine" }));
        jComboBoxCollectInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCollectInformationActionPerformed(evt);
            }
        });

        jLabelFuelCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelFuelCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFuelCount.setText("--");
        jLabelFuelCount.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabelFuelCountAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabelFuelAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelFuelAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFuelAmount.setText("Fuel Amount");

        jLabelAmmoAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelAmmoAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAmmoAmount.setText("Ammo Amount");

        jLabel4Positions.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4Positions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4Positions.setText("Position ");

        jButtonCollectInformation.setBackground(new java.awt.Color(204, 204, 255));
        jButtonCollectInformation.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonCollectInformation.setText("Collect Information");
        jButtonCollectInformation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButtonCollectInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCollectInformationActionPerformed(evt);
            }
        });

        jButtonSend.setBackground(new java.awt.Color(204, 204, 255));
        jButtonSend.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonSend.setText("Send");
        jButtonSend.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        jCheckBoxSendPrivate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBoxSendPrivate.setText("Send Private");
        jCheckBoxSendPrivate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxSendPrivateItemStateChanged(evt);
            }
        });
        jCheckBoxSendPrivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSendPrivateActionPerformed(evt);
            }
        });

        jCheckBoxAreaClear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBoxAreaClear.setText("Area Clear");
        jCheckBoxAreaClear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxAreaClearItemStateChanged(evt);
            }
        });
        jCheckBoxAreaClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAreaClearActionPerformed(evt);
            }
        });

        //JSlider.VERTICAL, 0, 100, 100
        //JSlider.setMajorTickSpacing(20);
        //    JSlider.setMinorTickSpacing(10);
        //    JSlider.setPaintTicks(true);
        //    JSlider.setPaintLabels(true);
        //    JSlider.setSnapToTicks(true);
        jSliderPosition.setBackground(new java.awt.Color(51, 53, 215));
        jSliderPosition.setMajorTickSpacing(20);
        jSliderPosition.setMinorTickSpacing(10);
        jSliderPosition.setPaintLabels(true);
        jSliderPosition.setPaintTicks(true);
        jSliderPosition.setSnapToTicks(true);
        jSliderPosition.setValue(10);
        jSliderPosition.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderPositionStateChanged(evt);
            }
        });

        jLabelAmmoAmount1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelAmmoAmount1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAmmoAmount1.setText("Receive");

        jLabelAmmoAmount2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelAmmoAmount2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAmmoAmount2.setText("Send");

        jTextAreaSend.setColumns(20);
        jTextAreaSend.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSend);

        jTextAreaReceive.setColumns(20);
        jTextAreaReceive.setRows(5);
        jScrollPane2.setViewportView(jTextAreaReceive);

        jTextFieldSend.setBackground(new java.awt.Color(3, 255, 255));
        jTextFieldSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSendActionPerformed(evt);
            }
        });

        jLabelSolderCount1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelSolderCount1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSolderCount1.setText("Solder Count");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelSolderCount1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel4Positions, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFuelAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabelFuelCount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelAmmoAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addComponent(jSliderPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabelAmmoAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(jCheckBoxSendPrivate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabelAmmoAmount2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jTextFieldSend, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jComboBoxCollectInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButtonCollectInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxAreaClear, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jComboBoxCollectInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCollectInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAreaClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSolderCount1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel4Positions, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFuelAmount)
                            .addComponent(jLabelFuelCount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabelAmmoAmount))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jSliderPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxSendPrivate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmmoAmount1)
                            .addComponent(jLabelAmmoAmount2))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldSend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxCollectInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCollectInformationActionPerformed
       selectType = (String) jComboBoxCollectInformation.getSelectedItem();
       
    }//GEN-LAST:event_jComboBoxCollectInformationActionPerformed

    private void jButtonCollectInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCollectInformationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCollectInformationActionPerformed

    private void jCheckBoxAreaClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAreaClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAreaClearActionPerformed

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
        String massage = jTextFieldSend.getText();
        
        if (selectType!=null) {
            if (selectType.equals(List[0])) {
                jTextAreaSend.append(List[0]+" : "+massage+"\n");
                observerble.sendSMS(massage, 'A');    
            }else if(selectType.equals(List[1])){
                jTextAreaSend.append(List[1]+" : "+massage+"\n");
                observerble.sendSMS(massage, 'H');
            }else if(selectType.equals(List[2])){
                jTextAreaSend.append(List[2]+" : "+massage+"\n");
                observerble.sendSMS(massage, 'T');
            }else{
                jTextAreaSend.append(List[3]+" : "+massage+"\n");
                observerble.sendSMS(massage, 'S');
            }
        }
    }//GEN-LAST:event_jButtonSendActionPerformed

    private void jCheckBoxSendPrivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSendPrivateActionPerformed
        
    }//GEN-LAST:event_jCheckBoxSendPrivateActionPerformed

    private void jCheckBoxSendPrivateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxSendPrivateItemStateChanged

    }//GEN-LAST:event_jCheckBoxSendPrivateItemStateChanged

    private void jCheckBoxAreaClearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxAreaClearItemStateChanged
          if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
            observerble.notifyObserverses(true);
        }else if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED){
            observerble.notifyObserverses(false);
        }
    }//GEN-LAST:event_jCheckBoxAreaClearItemStateChanged

    private void jTextFieldSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSendActionPerformed

    private void jSliderPositionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderPositionStateChanged
        if(clearPosition == true){
            int tempLevel = jSliderPosition.getValue();
            observerble.setPositionLevel(tempLevel);
        }
    }//GEN-LAST:event_jSliderPositionStateChanged

    private void jLabelFuelCountAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabelFuelCountAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelFuelCountAncestorAdded

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(()->{
            new MainController().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCollectInformation;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JCheckBox jCheckBoxAreaClear;
    private javax.swing.JCheckBox jCheckBoxSendPrivate;
    private javax.swing.JComboBox<String> jComboBoxCollectInformation;
    private javax.swing.JLabel jLabel4Positions;
    private javax.swing.JLabel jLabelAmmoAmount;
    private javax.swing.JLabel jLabelAmmoAmount1;
    private javax.swing.JLabel jLabelAmmoAmount2;
    private javax.swing.JLabel jLabelFuelAmount;
    private javax.swing.JLabel jLabelFuelCount;
    private javax.swing.JLabel jLabelSolderCount1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSliderPosition;
    private javax.swing.JTextArea jTextAreaReceive;
    private javax.swing.JTextArea jTextAreaSend;
    private javax.swing.JTextField jTextFieldSend;
    // End of variables declaration//GEN-END:variables

    public void ReceiveMassage(String massage) {
        jTextAreaReceive.append(massage+"\n");
    }

    void setPosition(boolean position) {
        if(position){
            jLabel4Positions.setText("Position");
            clearPosition = true;
        }else{
            jLabel4Positions.setText("Position OK");
            clearPosition = false;
        }
    }
    public void FuelCount(int count){
        jLabelFuelCount.setText(""+count);
    }
}
